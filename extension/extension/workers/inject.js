const a={eth_accounts:!0,eth_requestAccounts:!0,eth_chainId:!0,personal_sign:!0,wallet_requestPermissions:!0,wallet_registerOnboarding:!0,wallet_revokePermissions:!0,eth_gasPrice:!0,eth_getBlockByNumber:!0,eth_blockNumber:!0,eth_estimateGas:!0,eth_syncing:!0,eth_sign:!0,net_version:!0,eth_sendTransaction:!0,wallet_switchEthereumChain:!0,eth_call:!0,eth_getBalance:!0,eth_getTransactionByHash:!0,eth_getTransactionReceipt:!0,signTypedData:!0,eth_signTypedData:!0,signTypedData_v1:!0,eth_signTypedData_v1:!0,signTypedData_v3:!0,eth_signTypedData_V3:!0,signTypedData_v4:!0,eth_signTypedData_v4:!0,web3_clientVersion:!0,wallet_getPermissions:!0,net_listening:!0,eth_coinbase:!0,wallet_addEthereumChain:!0,eth_getCode:!0,eth_getTransactionCount:!0};window.addEventListener("message",(e=>{if(e.source==window)if("WALLET_CONTENT"===e?.data?.type)if(e.data.data.data.resId=e.data.resId,e.data.data.data.type="WALLET_CONTENT_MSG",e.data.data.data.website=document?.location?.href??"",(e?.data?.data?.method??"x")in a)e.data.data.data.method=e?.data?.data?.method??"",chrome?.runtime?.sendMessage(e.data.data.data,(a=>{chrome.runtime.lastError&&console.warn("LOC1: Error sending message:",chrome.runtime.lastError);const t=Number(e.data.resId.replace(/[A-Za-z]/g,"").slice(0,10)),s={target:"metamask-inpage",type:"WALLET_PAGE",resId:e.data.resId,data:{name:"metamask-provider",data:{jsonrpc:"2.0",id:t,result:a},id:t,method:e?.data?.data?.data?.method??"",params:e?.data?.data?.data?.params??[]}};window.postMessage(s,"*")}));else{const a={type:"WALLET_PAGE",data:{data:{result:{error:!0,message:"Unknown method requested "+e?.data?.data?.data?.method??""}}},resId:e.data.resId};window.postMessage(a,"*")}else"WALLET_PING"===e?.data?.type&&(e.data.data.data.resId=e.data.resId,e.data.data.data.type="WALLET_CONTENT_MSG",e.data.data.data.method="wallet_connect",e.data.data.data.params=Array(0),chrome.runtime.sendMessage(e.data.data.data,(async a=>{chrome.runtime.lastError&&console.warn("LOC2: Error sending message:",chrome.runtime.lastError),window.postMessage(a,"*")})))})),chrome.runtime.onMessage.addListener(((a,e,t)=>{if(chrome.runtime.lastError&&console.warn("Error receiving message:",chrome.runtime.lastError),"WALLET_EXT_LISTNER"===a.type){const e={type:"WALLET_PAGE_LISTENER",data:a.data};window.postMessage(e,"*")}return!0}));